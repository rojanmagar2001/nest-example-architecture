model Role {
    id          String   @id @default(uuid())
    name        String   @unique
    permissions String[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    users       User[]

    @@index([name])
    @@map("roles")
}

model User {
    id        String    @id @default(uuid())
    name      String    @db.VarChar(100)
    username  String    @unique @db.VarChar(255)
    email     String    @unique @db.VarChar(255)
    password  String    @db.VarChar(255)
    role      Role      @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    roleId    String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    sessions  Session[]

    @@map("users")
}

model Session {
    id        String   @id @default(uuid())
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    userId    String
    token     String   @unique
    ip        String?
    geo       String?
    userAgent String?
    image     String?
    expired   Boolean  @default(false)
    expiresAt DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([userId, userAgent], name: "unique_user_agent")
    @@unique([userId, token], name: "unique_user_token")
    @@map("sessions")
}
